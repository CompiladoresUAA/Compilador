RESERVED-WORD int
ID	vector
COMMA	,
ID	su
ID	mas
COMMA	,
ID	res
ID	tas
COMMA	,
ID	suma1
COMMA	,
ID	suma2
COMMA	,
ENTERO	25
ID	ert
SEMMICOL	;
RESERVED-WORD main
RESERVED-WORD if
LPAREN	(
RESERVED-WORD while
RPAREN	)
RESERVED-WORD if
PLUS	+
REAL	34.34
REAL	34.34
ENTERO	34
ENTERO	-34
PLUSP	++
PLUSP	++
PLUS	+
LESSL	--
LESSL	--
MINUS	-
RESERVED-WORD cin
GREATERT	>
GREATERT	>
GREATERET	>=
LESST	<
LESST	<
LESSET	<=
EQ	=
EQ	=
EQ	=
EQ	=
LBPAREN	{
RESERVED-WORD int
ID	x
COMMA	,
ID	y
COMMA	,
ID	z
SEMMICOL	;
RESERVED-WORD real
ID	a
COMMA	,
ID	b
COMMA	,
ID	c
SEMMICOL	;
RESERVED-WORD cin
ID	gfkh
RESERVED-WORD int
RESERVED-WORD real
ID	x
EQ	=
ENTERO	23
SEMMICOL	;
ID	y
EQ	=
ENTERO	2
PLUS	+
ENTERO	3
ENTERO	-1
SEMMICOL	;
ID	z
EQ	=
ID	y
PLUS	+
ENTERO	7
SEMMICOL	;
ID	a
EQ	=
REAL	24.0
PLUS	+
ENTERO	4
ENTERO	-1
TIMES	*
ENTERO	3
OVER	/
ENTERO	2
PLUS	+
ENTERO	34
ENTERO	-1
SEMMICOL	;
RESERVED-WORD if
LPAREN	(
ENTERO	2
GREATERT	>
ENTERO	3
RPAREN	)
ID	y
EQ	=
ID	a
PLUS	+
ENTERO	3
SEMMICOL	;
RESERVED-WORD else
RESERVED-WORD if
LPAREN	(
ENTERO	4
GREATERT	>
ENTERO	2
RPAREN	)
ID	b
EQ	=
REAL	3.2
SEMMICOL	;
RESERVED-WORD else
ID	b
EQ	=
REAL	5.0
SEMMICOL	;
RESERVED-WORD end
SEMMICOL	;
ID	y
EQ	=
ID	y
PLUS	+
ENTERO	1
SEMMICOL	;
RESERVED-WORD end
SEMMICOL	;
RESERVED-WORD do
ID	y
EQ	=
LPAREN	(
ID	y
PLUS	+
ENTERO	1
RPAREN	)
TIMES	*
ENTERO	2
PLUS	+
ENTERO	1
SEMMICOL	;
RESERVED-WORD until
LPAREN	(
ID	y
EQ	=
EQ	=
ENTERO	5
RPAREN	)
SEMMICOL	;
RESERVED-WORD while
LPAREN	(
ID	y
EQ	=
EQ	=
ENTERO	0
RPAREN	)
LBPAREN	{
RESERVED-WORD cout
ID	x
SEMMICOL	;
RBPAREN	}
SEMMICOL	;
RBPAREN	}
RESERVED-WORD if
ID	ya
ID	se
ID	termino
RESERVED-WORD while
RESERVED-WORD int
ENTERO	45
ID	ert67
REAL	45.67
SEMMICOL	;
RESERVED-WORD then
ID	mas
ID	lienas
RESERVED-WORD while
