<<<<<<< HEAD
RESERVED-WORD 	int
ID	 vector
COMMA	,
ID	 su
ID	 mas
COMMA	,
ID	 res
ID	 tas
COMMA	,
ID	 suma1
COMMA	,
ID	 suma2
COMMA	,
ENTERO	25	  1	  43
ID	 ert
SEMMICOL	;
RESERVED-WORD 	main
RESERVED-WORD 	if
LPAREN	(
RESERVED-WORD 	while
RPAREN	)
RESERVED-WORD 	if
PLUS	+
REAL	 34.34
REAL	 34.34
ENTERO	34	  2	  32
ENTERO	-34	  2	  35
PLUSP	++
PLUSP	++
PLUS	+
LESSL	--
LESSL	--
MINUS	-
RESERVED-WORD 	cin
GREATERT	>
GREATERT	>
GREATERET	>=
LESST	<
LESST	<
LESSET	<=
EQ	=
EQ	=
EQ	=
EQ	=
LBPAREN	{
RESERVED-WORD 	int
ID	 x
COMMA	,
ID	 y
COMMA	,
ID	 z
SEMMICOL	;
RESERVED-WORD 	real
ID	 a
COMMA	,
ID	 b
COMMA	,
ID	 c
SEMMICOL	;
RESERVED-WORD 	cin
ID	 gfkh
RESERVED-WORD 	int
RESERVED-WORD 	real
ID	 x
EQ	=
ENTERO	23	  12	  5
SEMMICOL	;
ID	 y
EQ	=
ENTERO	2	  13	  4
PLUS	+
ENTERO	3	  13	  6
ENTERO	-1	  13	  8
SEMMICOL	;
ID	 z
EQ	=
ID	 y
PLUS	+
ENTERO	7	  14	  6
SEMMICOL	;
ID	 a
EQ	=
REAL	 24.0
PLUS	+
ENTERO	4	  15	  9
ENTERO	-1	  15	  11
TIMES	*
ENTERO	3	  15	  13
OVER	/
ENTERO	2	  15	  15
PLUS	+
ENTERO	34	  15	  18
ENTERO	-1	  15	  20
SEMMICOL	;
RESERVED-WORD 	if
LPAREN	(
ENTERO	2	  16	  6
GREATERT	>
ENTERO	3	  16	  8
RPAREN	)
ID	 y
EQ	=
ID	 a
PLUS	+
ENTERO	3	  17	  14
SEMMICOL	;
RESERVED-WORD 	else
RESERVED-WORD 	if
LPAREN	(
ENTERO	4	  19	  11
GREATERT	>
ENTERO	2	  19	  13
RPAREN	)
ID	 b
EQ	=
REAL	 3.2
SEMMICOL	;
RESERVED-WORD 	else
ID	 b
EQ	=
REAL	 5.0
SEMMICOL	;
RESERVED-WORD 	end
SEMMICOL	;
ID	 y
EQ	=
ID	 y
PLUS	+
ENTERO	1	  24	  13
SEMMICOL	;
RESERVED-WORD 	end
SEMMICOL	;
RESERVED-WORD 	do
ID	 y
EQ	=
LPAREN	(
ID	 y
PLUS	+
ENTERO	1	  27	  7
RPAREN	)
TIMES	*
ENTERO	2	  27	  10
PLUS	+
ENTERO	1	  27	  12
SEMMICOL	;
RESERVED-WORD 	until
LPAREN	(
ID	 y
EQ	=
EQ	=
ENTERO	5	  28	  11
=======
RESERVED-WORD	main
LBPAREN	{
RESERVED-WORD	int
ID	x
COMMA	,
ID	y
SEMMICOL	;
RESERVED-WORD	real
ID	a
COMMA	,
ID	w
SEMMICOL	;
ID	x
PLUSP	++
SEMMICOL	;
ID	y
LESSL	--
SEMMICOL	;
ID	z
ASSIGN	:=
ENTERO	2
SEMMICOL	;
ID	w
ASSIGN	:=
NUMREAL	3.24
SEMMICOL	;
ID	x
ASSIGN	:=
ID	z
PLUS	+
ID	w
TIMES	*
ENTERO	3
MINUS	-
ENTERO	6
SEMMICOL	;
ID	y
ASSIGN	:=
ENTERO	12
SEMMICOL	;
RESERVED-WORD	while
LPAREN	(
ID	z
LESSET	<=
ID	w
RPAREN	)
LBPAREN	{
RESERVED-WORD	if
LPAREN	(
ID	i
EQ	=
ENTERO	1
RPAREN	)
ID	z
ASSIGN	:=
ID	w
SEMMICOL	;
ID	i
ASSIGN	:=
ENTERO	2
SEMMICOL	;
RESERVED-WORD	if
LPAREN	(
ID	i
DIFF	<>
ENTERO	5
>>>>>>> 874c9464bb9153011d6e31ed7b4d7f94443caf9a
RPAREN	)
ID	i
ASSIGN	:=
ID	i
PLUS	+
ENTERO	1
SEMMICOL	;
<<<<<<< HEAD
RESERVED-WORD 	while
LPAREN	(
ID	 y
EQ	=
EQ	=
ENTERO	0	  29	  11
RPAREN	)
LBPAREN	{
RESERVED-WORD 	cout
ID	 x
=======
RESERVED-WORD	if
LPAREN	(
ID	i
GREATERT	>
ENTERO	5
RPAREN	)
ID	i
ASSIGN	:=
ENTERO	2
SEMMICOL	;
RESERVED-WORD	end
RESERVED-WORD	else
ID	i
ASSIGN	:=
ID	i
MINUS	-
ENTERO	1
SEMMICOL	;
RESERVED-WORD	end
RESERVED-WORD	else
ID	y
ASSIGN	:=
ID	x
>>>>>>> 874c9464bb9153011d6e31ed7b4d7f94443caf9a
SEMMICOL	;
RESERVED-WORD	end
RBPAREN	}
RESERVED-WORD	cin
ID	r
SEMMICOL	;
ID	x
ASSIGN	:=
ENTERO	0
SEMMICOL	;
RESERVED-WORD	do
ID	x
ASSIGN	:=
ID	x
PLUS	+
ENTERO	5
SEMMICOL	;
RESERVED-WORD	cout
ID	x
SEMMICOL	;
RESERVED-WORD	until
LPAREN	(
ID	x
GREATERET	>=
ENTERO	100
RPAREN	)
SEMMICOL	;
RBPAREN	}
<<<<<<< HEAD
RESERVED-WORD 	if
ID	 ya
ID	 se
ID	 termino
RESERVED-WORD 	while
RESERVED-WORD 	int
ENTERO	45	  56	  8
ID	 ert67
REAL	 45.67
SEMMICOL	;
RESERVED-WORD 	then
ID	 mas
ID	 lienas
RESERVED-WORD 	while
EOF 	
=======
>>>>>>> 874c9464bb9153011d6e31ed7b4d7f94443caf9a
