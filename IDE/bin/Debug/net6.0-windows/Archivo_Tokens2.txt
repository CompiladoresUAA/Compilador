RESERVED-WORD	main	1	5
LBPAREN	{	1	5
RESERVED-WORD	int	2	5
ID	x	2	7
COMMA	,	2	7
ID	y	2	9
SEMMICOL	;	2	9
RESERVED-WORD	real	3	6
ID	a	3	8
COMMA	,	3	8
ID	w	3	10
SEMMICOL	;	3	10
ID	x	4	3
PLUSP	++	4	4
SEMMICOL	;	4	5
ID	y	5	3
LESSL	--	5	4
SEMMICOL	;	5	5
ID	z	6	3
ASSIGN	:=	6	4
ENTERO	2	6	6
SEMMICOL	;	6	6
ID	w	6	8
ASSIGN	:=	6	9
NUMREAL	3.24	6	14
SEMMICOL	;	6	14
ID	x	6	16
ASSIGN	:=	6	17
ID	z	6	19
PLUS	+	6	20
ID	w	6	21
TIMES	*	6	21
ENTERO	3	6	23
MINUS	-	6	24
ENTERO	6	6	25
SEMMICOL	;	6	25
ID	y	6	27
ASSIGN	:=	6	28
ENTERO	12	6	31
SEMMICOL	;	6	31
RESERVED-WORD	while	7	6
LPAREN	(	7	6
ID	z	7	8
LESSET	<=	7	9
ID	w	7	11
RPAREN	)	7	11
LBPAREN	{	7	12
RESERVED-WORD	if	8	5
LPAREN	(	8	5
ID	i	8	7
EQ	=	8	7
ENTERO	1	8	9
RPAREN	)	8	9
ID	z	9	6
ASSIGN	:=	9	7
ID	w	9	9
SEMMICOL	;	9	9
ID	i	10	6
ASSIGN	:=	10	7
ENTERO	2	10	9
SEMMICOL	;	10	9
RESERVED-WORD	if	11	8
LPAREN	(	11	8
ID	i	11	10
DIFF	<>	11	11
ENTERO	5	11	13
RPAREN	)	11	13
ID	i	12	10
ASSIGN	:=	12	11
ID	i	12	13
PLUS	+	12	14
ENTERO	1	12	15
SEMMICOL	;	12	15
RESERVED-WORD	if	13	4
LPAREN	(	13	4
ID	i	13	6
GREATERT	>	13	7
ENTERO	5	13	8
RPAREN	)	13	8
ID	i	14	6
ASSIGN	:=	14	7
ENTERO	2	14	9
SEMMICOL	;	14	9
RESERVED-WORD	end	15	5
RESERVED-WORD	else	16	11
ID	i	17	3
ASSIGN	:=	17	4
ID	i	17	6
MINUS	-	17	7
ENTERO	1	17	8
SEMMICOL	;	17	8
RESERVED-WORD	end	18	10
RESERVED-WORD	else	19	9
ID	y	20	3
ASSIGN	:=	20	4
ID	x	20	6
SEMMICOL	;	20	6
RESERVED-WORD	end	21	7
RBPAREN	}	22	1
RESERVED-WORD	cin	23	4
ID	r	23	6
SEMMICOL	;	23	6
ID	x	25	2
ASSIGN	:=	25	3
ENTERO	0	25	5
SEMMICOL	;	25	5
RESERVED-WORD	do	26	3
ID	x	27	4
ASSIGN	:=	27	5
ID	x	27	7
PLUS	+	27	8
ENTERO	5	27	9
SEMMICOL	;	27	9
RESERVED-WORD	cout	28	7
ID	x	28	9
SEMMICOL	;	28	9
RESERVED-WORD	until	29	6
LPAREN	(	29	6
ID	x	29	8
GREATERET	>=	29	9
ENTERO	100	29	13
RPAREN	)	29	13
SEMMICOL	;	29	14
RBPAREN	}	30	1
EOF	 EOF	  30	  2
